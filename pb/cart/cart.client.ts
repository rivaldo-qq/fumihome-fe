// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "cart/cart.proto" (package "cart", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CartService } from "./cart";
import type { UpdateCartQuantityResponse } from "./cart";
import type { UpdateCartQuantityRequest } from "./cart";
import type { DeleteCartResponse } from "./cart";
import type { DeleteCartRequest } from "./cart";
import type { ListCartResponse } from "./cart";
import type { ListCartRequest } from "./cart";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { AddProductToCartResponse } from "./cart";
import type { AddProductToCartRequest } from "./cart";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service cart.CartService
 */
export interface ICartServiceClient {
    /**
     * @generated from protobuf rpc: AddProductToCart(cart.AddProductToCartRequest) returns (cart.AddProductToCartResponse);
     */
    addProductToCart(input: AddProductToCartRequest, options?: RpcOptions): UnaryCall<AddProductToCartRequest, AddProductToCartResponse>;
    /**
     * @generated from protobuf rpc: ListCart(cart.ListCartRequest) returns (cart.ListCartResponse);
     */
    listCart(input: ListCartRequest, options?: RpcOptions): UnaryCall<ListCartRequest, ListCartResponse>;
    /**
     * @generated from protobuf rpc: DeleteCart(cart.DeleteCartRequest) returns (cart.DeleteCartResponse);
     */
    deleteCart(input: DeleteCartRequest, options?: RpcOptions): UnaryCall<DeleteCartRequest, DeleteCartResponse>;
    /**
     * @generated from protobuf rpc: UpdateCartQuantity(cart.UpdateCartQuantityRequest) returns (cart.UpdateCartQuantityResponse);
     */
    updateCartQuantity(input: UpdateCartQuantityRequest, options?: RpcOptions): UnaryCall<UpdateCartQuantityRequest, UpdateCartQuantityResponse>;
}
/**
 * @generated from protobuf service cart.CartService
 */
export class CartServiceClient implements ICartServiceClient, ServiceInfo {
    typeName = CartService.typeName;
    methods = CartService.methods;
    options = CartService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: AddProductToCart(cart.AddProductToCartRequest) returns (cart.AddProductToCartResponse);
     */
    addProductToCart(input: AddProductToCartRequest, options?: RpcOptions): UnaryCall<AddProductToCartRequest, AddProductToCartResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddProductToCartRequest, AddProductToCartResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListCart(cart.ListCartRequest) returns (cart.ListCartResponse);
     */
    listCart(input: ListCartRequest, options?: RpcOptions): UnaryCall<ListCartRequest, ListCartResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListCartRequest, ListCartResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteCart(cart.DeleteCartRequest) returns (cart.DeleteCartResponse);
     */
    deleteCart(input: DeleteCartRequest, options?: RpcOptions): UnaryCall<DeleteCartRequest, DeleteCartResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteCartRequest, DeleteCartResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateCartQuantity(cart.UpdateCartQuantityRequest) returns (cart.UpdateCartQuantityResponse);
     */
    updateCartQuantity(input: UpdateCartQuantityRequest, options?: RpcOptions): UnaryCall<UpdateCartQuantityRequest, UpdateCartQuantityResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateCartQuantityRequest, UpdateCartQuantityResponse>("unary", this._transport, method, opt, input);
    }
}
